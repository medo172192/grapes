  {{--const host = 'http://artf.github.io/grapesjs/';--}}
    {{--const images = [--}}
    {{--    host + 'img/grapesjs-logo.png',--}}
    {{--    host + 'img/tmp-blocks.jpg',--}}
    {{--    host + 'img/tmp-tgl-images.jpg',--}}
    {{--    host + 'img/tmp-send-test.jpg',--}}
    {{--    host + 'img/tmp-devices.jpg',--}}
    {{--];--}}
    {{--const editor = grapesjs.init({--}}
    {{--    showOffsets: 1,--}}
    {{--    assetManager: {--}}
    {{--        assets: images--}}
    {{--    },--}}
    {{--    noticeOnUnload: 0,--}}
    {{--    container: '#gjs',--}}
    {{--    height: '1200px',--}}
    {{--    fromElement: 1,--}}
    {{--    allowScripts: 1,--}}
    {{--    plugins: [--}}
    {{--        'grapesjs-custom-code',--}}
    {{--        "gjs-blocks-basic",--}}
    {{--        'grapesjs-plugin-forms',--}}
    {{--        'grapesjs-tui-image-editor',--}}
    {{--        'gjs-blocks-flexbox',--}}
    {{--        'grapesjs-tabs',--}}
    {{--        'grapesjs-tooltip',--}}
    {{--        // 'grapesjs-parser-postcss',--}}
    {{--        'grapesjs-typed',--}}
    {{--        'grapesjs-navbar',--}}
    {{--        // 'grapesjs-ui-suggest-classes',--}}
    {{--        'grapesjs-preset-webpage',--}}
    {{--        'grapesjs-component-countdown',--}}
    {{--        'grapesjs-style-gradient',--}}
    {{--        'grapesjs-style-filter',--}}
    {{--        'grapesjs-style-bg',--}}
    {{--        'gjs-plugin-filestack',--}}
    {{--        'gjs-plugin-ckeditor',--}}
    {{--        'grapesjs-touch',--}}
    {{--        // '@silexlabs/grapesjs-fonts',--}}
    {{--        "grapesjs-ga",--}}
    {{--        "grapesjs-component-twitch",--}}
    {{--        "grapesjs-tailwind"--}}
    {{--    ],--}}
    {{--    pluginsOpts: {--}}
    {{--        'grapesjs-custom-code': {},--}}
    {{--        "gjs-blocks-basic": {},--}}
    {{--        'grapesjs-plugin-forms': {},--}}
    {{--        'gjs-blocks-flexbox': {},--}}
    {{--        'grapesjs-tabs': {},--}}
    {{--        'grapesjs-tooltip': {},--}}
    {{--        'grapesjs-typed': {},--}}
    {{--        // 'grapesjs-parser-postcss': {},--}}
    {{--        'grapesjs-navbar': {--}}
    {{--            /* ...options */--}}
    {{--        },--}}
    {{--        'gjs-plugin-filestack': {--}}
    {{--            key: 'Ajh5qpZXWQqmcxokCAM0Zz'--}}
    {{--        },--}}
    {{--        'gjs-plugin-ckeditor' : {--}}
    {{--            options: {--}}
    {{--                language: 'en',--}}
    {{--                startupFocus: true,--}}
    {{--                extraAllowedContent: '*(*);*{*}', // Allows any class and any inline style--}}
    {{--                allowedContent: true, // Disable auto-formatting, class removing, etc.--}}
    {{--                // enterMode: CKEDITOR.ENTER_BR,--}}
    {{--                uiColor: '#0000001a', // Inline editor color--}}
    {{--                extraPlugins: 'justify,colorbutton,panelbutton,font,sourcedialog,showblocks',--}}
    {{--                toolbar: [--}}
    {{--                    ["Format", "-", "Bold", "Italic", "Strike", "Underline", "Subscript", "Superscript", "RemoveFormat", "-", "NumberedList", "BulletedList", "-", "Outdent", "Indent", "-", "JustifyLeft", "JustifyCenter", "JustifyRight", "JustifyBlock", "-", "Link", "Unlink", "Anchor", "TextColor", "BGColor", "-", "ShowBlocks", "-", "Image", "Table", "-", "Sourcedialog"]--}}
    {{--                ]--}}
    {{--            },--}}
    {{--            position: 'left',--}}
    {{--        },--}}
    {{--        "@silexlabs/grapesjs-fonts": {--}}
    {{--            api_key: "AIzaSyAdJTYSLPlKz4w5Iqyy-JAF2o8uQKd1FKc"--}}
    {{--        }--}}
    {{--    },--}}
    {{--    canvas: {--}}
    {{--        styles: [--}}
    {{--            'https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css',--}}
    {{--        ],--}}
    {{--        scripts: [--}}
    {{--            'https://code.jquery.com/jquery-3.3.1.slim.min.js',--}}
    {{--            'https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js',--}}
    {{--            'https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js',--}}
    {{--        ],--}}
    {{--    },--}}
    {{--    storageManager: {--}}
    {{--        id: 'mabdulmonem-', // Prefix identifier that will be used inside storing and loading--}}
    {{--        autosave: false,--}}
    {{--        // autoload: false, // Autoload stored data on init--}}
    {{--        // stepsBeforeSave: 0, // If autosave enabled, indicates how many changes are necessary before store method is triggered--}}
    {{--        // storeComponents: true, // Enable/Disable storing of components in JSON format--}}
    {{--        // storeStyles: true, // Enable/Disable storing of rules in JSON format--}}
    {{--        // storeHtml: true, // Enable/Disable storing of components as HTML string--}}
    {{--        // storeCss: true,--}}
    {{--        // type: 'remote',--}}
    {{--        // autoSave: false,--}}

    {{--        //urlStore: "{{ route('landing.page.editor.save', getLangCode()) }}",--}}
    {{--    },--}}
    {{--    commands: {--}}
    {{--        strict: false, // by default is true--}}
    {{--    },--}}
    {{--    keymaps: {--}}
    {{--        // Object of keymaps--}}
    {{--        defaults: {--}}
    {{--            'ma:save-shortcut': {--}}
    {{--                keys: 'âŒ˜+s, ctrl+s',--}}
    {{--                handler: 'saveShortCut'--}}
    {{--            },--}}
    {{--        }--}}
    {{--    },--}}

    {{--    styleManager: {--}}
    {{--        sectors: [--}}
    {{--        //     {--}}
    {{--        //     name: 'General',--}}
    {{--        //     open: true,--}}
    {{--        //     buildProps: ['float', 'display', 'position', 'top', 'right', 'left', 'bottom']--}}
    {{--        // },--}}

    {{--            // {--}}
    {{--            //     name: 'Flex',--}}
    {{--            //     open: false,--}}
    {{--            //     buildProps: ['flex-direction', 'flex-wrap', 'justify-content', 'align-items',--}}
    {{--            //         'align-content', 'order', 'flex-basis', 'flex-grow', 'flex-shrink', 'align-self'--}}
    {{--            //     ]--}}
    {{--            // },--}}
    {{--            // {--}}
    {{--            //     name: 'Dimension',--}}
    {{--            //     open: false,--}}
    {{--            //     buildProps: ['width', 'height', 'max-width', 'min-height', 'margin', 'padding'],--}}
    {{--            // },--}}
    {{--            // {--}}
    {{--            //     name: 'Typography',--}}
    {{--            //     open: false,--}}
    {{--            //     buildProps: ['font-family', 'font-size', 'font-weight', 'letter-spacing', 'color',--}}
    {{--            //         'line-height', 'text-shadow'--}}
    {{--            //     ],--}}
    {{--            // },--}}
    {{--            // {--}}
    {{--            //     name: 'Decorations',--}}
    {{--            //     open: false,--}}
    {{--            //     buildProps: ['border-radius-c', 'background-color', 'border-radius', 'border',--}}
    {{--            //         'box-shadow', 'background'--}}
    {{--            //     ],--}}
    {{--            // },--}}
    {{--            // {--}}
    {{--            //     name: 'Extra',--}}
    {{--            //     open: false,--}}
    {{--            //     properties: [{--}}
    {{--            //         extend: 'filter'--}}
    {{--            //     },--}}
    {{--            //         {--}}
    {{--            //             extend: 'filter',--}}
    {{--            //             property: 'backdrop-filter'--}}
    {{--            //         },--}}
    {{--            //     ],--}}
    {{--            //     buildProps: ['transition', 'perspective', 'transform'],--}}
    {{--            // }--}}
    {{--        ],--}}
    {{--    },--}}
    {{--});--}}

    {{--function saveContent(editor) {--}}
    {{--    $.ajax({--}}
    {{--        url: "{{ route('landing.page.editor.save', getLangCode()) }}",--}}
    {{--        type: "post",--}}
    {{--        data: {--}}
    {{--            html:   encodeHtml(editor.getHtml()),--}}
    {{--            css : encodeHtml(editor.getCss()),--}}
    {{--            js: encodeHtml(editor.getJs()),--}}
    {{--            uuid: "{{ $page->uuid }}",--}}
    {{--            _token: "{{csrf_token()}}"--}}
    {{--        },--}}
    {{--        success: function(response) {--}}

    {{--            $.toast({--}}
    {{--                heading: "{{_i('Success')}}",--}}
    {{--                text: response.msg,--}}
    {{--                showHideTransition: 'slide',--}}
    {{--                icon: 'success'--}}
    {{--            })--}}
    {{--        }--}}
    {{--    })--}}
    {{--}--}}
    {{--//--}}
    {{--// editor.on('sorter:drag:end', function(event) {--}}
    {{--//     let component = event.modelToDrop;--}}
    {{--//     if (component && component.attributes && (component.attributes['block-id'] || component.attributes['id'])) {--}}
    {{--//         window.runScriptsOfComponentAndChildren(component);--}}
    {{--//     }--}}
    {{--//     // remove all existing CKEditors after dragging a block with active editor--}}
    {{--//     for (let instanceName in CKEDITOR.instances) {--}}
    {{--//         CKEDITOR.instances[instanceName].destroy(true);--}}
    {{--//     }--}}
    {{--// });--}}


    {{--const panelManager = editor.Panels;--}}

    {{--function encodeHtml(html) {--}}
    {{--    return html.replaceAll(/[\u00A0-\u9999<>\&]/g, function(i) {--}}
    {{--        return '&#'+i.charCodeAt(0)+';';--}}
    {{--    });--}}
    {{--}--}}

    {{--const defaultToolbar = panelManager.getPanel('options').get('buttons');--}}
    {{--// Add save button to the panel--}}
    {{--defaultToolbar.add({--}}
    {{--    id: 'save-btn',--}}
    {{--    className: 'fa fa-save',--}}
    {{--    command: function(editor) {--}}
    {{--       saveContent(editor)--}}
    {{--    },--}}
    {{--    attributes: {--}}
    {{--        title: 'Save'--}}
    {{--    }--}}
    {{--});--}}
    {{--defaultToolbar.add({--}}
    {{--    id: 'view-shop-btn',--}}
    {{--    className: 'fa fa-shopping-cart',--}}
    {{--    command: function(editor) {--}}
    {{--        window.open("https://{{$link}}", "_blank");--}}
    {{--    },--}}
    {{--    attributes: {--}}
    {{--        title: 'Save'--}}
    {{--    }--}}
    {{--});--}}


    {{--const commands = editor.Commands;--}}

    {{--// editor.keymaps.add('ns:my-keymap', 'âŒ˜+j, âŒ˜+u, ctrl+j, alt+u', editor => {--}}
    {{--//     console.log('do stuff');--}}
    {{--// });--}}

    {{--commands.add('saveShortCut', {--}}
    {{--    run(editor, sender) {--}}

    {{--        console.log(editor)--}}

    {{--    },--}}
    {{--    stop(editor, sender) {--}}
    {{--        console.log("close")--}}
    {{--    },--}}
    {{--});--}}
    {{--commands.add('addProductCommand', {--}}
    {{--    run(editor, sender) {--}}

    {{--        // console.log(editor)--}}
    {{--        editor.Modal.open({--}}
    {{--            title: 'Select Product', // string | HTMLElement--}}
    {{--            content: '<input type="text" name="product" placeholder="Enter product name">', // string | HTMLElement--}}
    {{--        });--}}

    {{--    },--}}
    {{--    stop(editor, sender) {--}}
    {{--        editor.Modal.close()--}}
    {{--        console.log("close")--}}
    {{--    },--}}
    {{--});--}}



    {{--// commands.run('addProductCommand', (editor, sender) => {--}}
    {{--//     console.log("run")--}}
    {{--// });--}}


    {{--editor.on('component:selected', () => {--}}

    {{--    const command = 'addProductCommand';--}}

    {{--    // Get the selected component and its default toolbar--}}
    {{--    const selectedComponent = editor.getSelected();--}}

    {{--    const defaultToolbar = selectedComponent.get('toolbar');--}}


    {{--    // const selectedComponent = editor.getSelected();--}}
    {{--    const hasSpecificClass = selectedComponent.getEl().classList.contains('mabdulmonem-contact-form');--}}

    {{--    console.log(commands.isActive(command))--}}
    {{--    console.log(hasSpecificClass)--}}
    {{--    if(hasSpecificClass)--}}
    {{--    {--}}
    {{--        // console.log(hasSpecificClass)--}}
    {{--        // console.log(selectedComponent)--}}

    {{--        // Check if this command already exists on this component toolbar--}}
    {{--        const commandExists = defaultToolbar.some(item => item.command === command);--}}

    {{--        // console.log(commands.isActive(command))--}}

    {{--        // If it doesn't already exist, add it--}}
    {{--        if (!commandExists) {--}}
    {{--            selectedComponent.set({--}}
    {{--                toolbar: [...defaultToolbar, { attributes: { class: 'fa fa-product-hunt' }, command: command }]--}}
    {{--            });--}}
    {{--        }--}}
    {{--    }--}}

    {{--});--}}



    {{--/**--}}
    {{-- * Adds a keyboard shortcut to save the page in GrapesJS.--}}
    {{-- *--}}
    {{-- * @param {object} editor - The GrapesJS editor instance--}}
    {{-- * @param {string} key - The keyboard shortcut key--}}
    {{-- * @param {string} modifier - The keyboard shortcut modifier--}}
    {{-- */--}}
    {{--function addSaveShortcut(editor, key, modifier) {--}}
    {{--    try {--}}
    {{--        // Check if the editor instance is valid--}}
    {{--        if (!editor) {--}}
    {{--            throw new Error("Invalid editor instance");--}}
    {{--        }--}}

    {{--        // Check if the key and modifier are valid--}}
    {{--        if (!key || !modifier) {--}}
    {{--            throw new Error("Invalid key or modifier");--}}
    {{--        }--}}

    {{--        // Add the keyboard shortcut to save the page--}}
    {{--        // editor.Keymaps.add(key + '+' + modifier, {--}}
    {{--        //     run: function() {--}}
    {{--        //         saveContent(editor)--}}
    {{--        //         // editor.store();--}}
    {{--        //     }--}}
    {{--        // });--}}
    {{--    } catch (error) {--}}
    {{--        // Log the error--}}
    {{--        console.error(error);--}}
    {{--    }--}}
    {{--}--}}

    {{--addSaveShortcut(editor, 'ctrl', 's');--}}

    {{--// $(document).bind('keydown keypress', 'ctrl+s', function(){--}}
    {{--//     // $('#save').click();--}}
    {{--//     return false;--}}
    {{--// });--}}
    {{--//--}}
    {{--window.onbeforeunload = function (e) {--}}
    {{--    // Cancel the event--}}
    {{--    e.preventDefault();--}}

    {{--    // Chrome requires returnValue to be set--}}
    {{--    e.returnValue = 'Really want to quit the game?';--}}
    {{--};--}}

    {{--/* disable ctrl + s, since this is handled in iframe parent */--}}
    {{--document.addEventListener("keydown", function(event) {--}}
    {{--    if (event.ctrlKey && event.key === "s") {--}}
    {{--        event.preventDefault();--}}
    {{--        saveContent(editor)--}}
    {{--    }--}}
    {{--});--}}

